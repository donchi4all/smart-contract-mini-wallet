{
	"id": "40ce3b9b519a61422f0cd3b8d8183d69",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleSmartMoney.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\ncontract SimpleSmartMoneySmart {\n    /**\n    - The `totalBalanceRecieved` is a public state variable of type uint256, \n    - representing the total amount in wei (the smallest unit of ether) that \n    - has been deposited into this contract by users.\n    **/\n    uint256 public totalBalanceRecieved;\n\n    /** \n    - Function `deposit()`: \n    - This function allows any user to deposit Ether into the smart contract. \n    - It is marked as payable, which means it can receive Ether along with \n    - other data in its transaction. \n    - The value of the incoming Ether is added to the `totalBalanceRecieved` variable.\n    -  When called, this function will increment the sender's balance by the amount\n    -  they are sending (msg.value).\n    **/\n\n    function deposit() public payable {\n        totalBalanceRecieved += msg.value;\n    }\n\n    /**\n     -  Function `withdrawAllToSenderAddress()`: \n     - This function allows a user to withdraw all of their Ether from the contract \n     - back into their own account. The total amount available for withdrawal\n     -  is determined by calling the `getContractBalance()` function (which returns \n     - the balance of this smart contract). The `transfer` method is used here, which \n     - sends the specified amount of wei to a given address and automatically handles\n     -  gas fees. In this case, it's sent back to the sender.\n     **/\n    function withdrawAllToSenderAddress() public {\n        address payable to = payable(msg.sender);\n        to.transfer(getContractBalance());\n    }\n\n    /**\n    - Function `withrawToAdress(address payable  to)`: \n    - This function allows an owner (not shown here because there are no roles defined for\n    - these functions) to withdraw all of the Ether from the contract into a specified \n    - address. The recipient's address must be provided when calling this function and\n    - it is marked as `payable`, allowing ether to be sent directly to that address.\n    **/\n    function withrawToAddress(address payable to) public {\n        to.transfer(getContractBalance());\n    }\n\n    /** \n    - Function `getContractBalance()`: \n    - This view function simply returns the current balance of the contract in wei.\n    - It does so by using the built-in `address(this).balance` property which always\n    - refers to the current contract's balance. The returned value is of type uint256,\n    - representing the amount of Ether in the contract, in smallest denomination (wei).\n    **/\n    function getContractBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/SimpleSmartMoney.sol": {
				"SimpleSmartMoneySmart": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBalanceRecieved",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAllToSenderAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withrawToAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleSmartMoney.sol\":66:2650  contract SimpleSmartMoneySmart {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleSmartMoney.sol\":66:2650  contract SimpleSmartMoneySmart {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6f9fb98a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x957177ba\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc899e417\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xea14661b\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SimpleSmartMoney.sol\":2543:2648  function getContractBalance() public view returns (uint256) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSmartMoney.sol\":1459:1604  function withdrawAllToSenderAddress() public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/SimpleSmartMoney.sol\":2033:2136  function withrawToAddress(address payable to) public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/SimpleSmartMoney.sol\":819:903  function deposit() public payable {... */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/SimpleSmartMoney.sol\":329:364  uint256 public totalBalanceRecieved */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleSmartMoney.sol\":2543:2648  function getContractBalance() public view returns (uint256) {... */\n    tag_9:\n        /* \"contracts/SimpleSmartMoney.sol\":2594:2601  uint256 */\n      0x00\n        /* \"contracts/SimpleSmartMoney.sol\":2620:2641  address(this).balance */\n      selfbalance\n        /* \"contracts/SimpleSmartMoney.sol\":2613:2641  return address(this).balance */\n      swap1\n      pop\n        /* \"contracts/SimpleSmartMoney.sol\":2543:2648  function getContractBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SimpleSmartMoney.sol\":1459:1604  function withdrawAllToSenderAddress() public {... */\n    tag_14:\n        /* \"contracts/SimpleSmartMoney.sol\":1514:1532  address payable to */\n      0x00\n        /* \"contracts/SimpleSmartMoney.sol\":1543:1553  msg.sender */\n      caller\n        /* \"contracts/SimpleSmartMoney.sol\":1514:1554  address payable to = payable(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/SimpleSmartMoney.sol\":1564:1566  to */\n      dup1\n        /* \"contracts/SimpleSmartMoney.sol\":1564:1575  to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSmartMoney.sol\":1564:1597  to.transfer(getContractBalance()) */\n      0x08fc\n        /* \"contracts/SimpleSmartMoney.sol\":1576:1596  getContractBalance() */\n      tag_28\n        /* \"contracts/SimpleSmartMoney.sol\":1576:1594  getContractBalance */\n      tag_9\n        /* \"contracts/SimpleSmartMoney.sol\":1576:1596  getContractBalance() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/SimpleSmartMoney.sol\":1564:1597  to.transfer(getContractBalance()) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n        /* \"contracts/SimpleSmartMoney.sol\":1504:1604  {... */\n      pop\n        /* \"contracts/SimpleSmartMoney.sol\":1459:1604  function withdrawAllToSenderAddress() public {... */\n      jump\t// out\n        /* \"contracts/SimpleSmartMoney.sol\":2033:2136  function withrawToAddress(address payable to) public {... */\n    tag_19:\n        /* \"contracts/SimpleSmartMoney.sol\":2096:2098  to */\n      dup1\n        /* \"contracts/SimpleSmartMoney.sol\":2096:2107  to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleSmartMoney.sol\":2096:2129  to.transfer(getContractBalance()) */\n      0x08fc\n        /* \"contracts/SimpleSmartMoney.sol\":2108:2128  getContractBalance() */\n      tag_32\n        /* \"contracts/SimpleSmartMoney.sol\":2108:2126  getContractBalance */\n      tag_9\n        /* \"contracts/SimpleSmartMoney.sol\":2108:2128  getContractBalance() */\n      jump\t// in\n    tag_32:\n        /* \"contracts/SimpleSmartMoney.sol\":2096:2129  to.transfer(getContractBalance()) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n        /* \"contracts/SimpleSmartMoney.sol\":2033:2136  function withrawToAddress(address payable to) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/SimpleSmartMoney.sol\":819:903  function deposit() public payable {... */\n    tag_21:\n        /* \"contracts/SimpleSmartMoney.sol\":887:896  msg.value */\n      callvalue\n        /* \"contracts/SimpleSmartMoney.sol\":863:883  totalBalanceRecieved */\n      0x00\n      dup1\n        /* \"contracts/SimpleSmartMoney.sol\":863:896  totalBalanceRecieved += msg.value */\n      dup3\n      dup3\n      sload\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleSmartMoney.sol\":819:903  function deposit() public payable {... */\n      jump\t// out\n        /* \"contracts/SimpleSmartMoney.sol\":329:364  uint256 public totalBalanceRecieved */\n    tag_24:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_38:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_39:\n        /* \"#utility.yul\":177:201   */\n      tag_51\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_38\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_11:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_53\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_39\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_41:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_43:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:1005   */\n    tag_44:\n        /* \"#utility.yul\":946:953   */\n      0x00\n        /* \"#utility.yul\":975:999   */\n      tag_59\n        /* \"#utility.yul\":993:998   */\n      dup3\n        /* \"#utility.yul\":975:999   */\n      tag_43\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":964:999   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:1005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1011:1149   */\n    tag_45:\n        /* \"#utility.yul\":1092:1124   */\n      tag_61\n        /* \"#utility.yul\":1118:1123   */\n      dup2\n        /* \"#utility.yul\":1092:1124   */\n      tag_44\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1085:1090   */\n      dup2\n        /* \"#utility.yul\":1082:1125   */\n      eq\n        /* \"#utility.yul\":1072:1143   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":1139:1140   */\n      0x00\n        /* \"#utility.yul\":1136:1137   */\n      dup1\n        /* \"#utility.yul\":1129:1141   */\n      revert\n        /* \"#utility.yul\":1072:1143   */\n    tag_62:\n        /* \"#utility.yul\":1011:1149   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1155:1310   */\n    tag_46:\n        /* \"#utility.yul\":1209:1214   */\n      0x00\n        /* \"#utility.yul\":1247:1253   */\n      dup2\n        /* \"#utility.yul\":1234:1254   */\n      calldataload\n        /* \"#utility.yul\":1225:1254   */\n      swap1\n      pop\n        /* \"#utility.yul\":1263:1304   */\n      tag_64\n        /* \"#utility.yul\":1298:1303   */\n      dup2\n        /* \"#utility.yul\":1263:1304   */\n      tag_45\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1155:1310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1316:1661   */\n    tag_18:\n        /* \"#utility.yul\":1383:1389   */\n      0x00\n        /* \"#utility.yul\":1432:1434   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1411:1418   */\n      dup5\n        /* \"#utility.yul\":1407:1430   */\n      sub\n        /* \"#utility.yul\":1403:1435   */\n      slt\n        /* \"#utility.yul\":1400:1519   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1438:1517   */\n      tag_67\n      tag_41\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1400:1519   */\n    tag_66:\n        /* \"#utility.yul\":1558:1559   */\n      0x00\n        /* \"#utility.yul\":1583:1644   */\n      tag_68\n        /* \"#utility.yul\":1636:1643   */\n      dup5\n        /* \"#utility.yul\":1627:1633   */\n      dup3\n        /* \"#utility.yul\":1616:1625   */\n      dup6\n        /* \"#utility.yul\":1612:1634   */\n      add\n        /* \"#utility.yul\":1583:1644   */\n      tag_46\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1573:1644   */\n      swap2\n      pop\n        /* \"#utility.yul\":1529:1654   */\n      pop\n        /* \"#utility.yul\":1316:1661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1667:1847   */\n    tag_47:\n        /* \"#utility.yul\":1715:1792   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1712:1713   */\n      0x00\n        /* \"#utility.yul\":1705:1793   */\n      mstore\n        /* \"#utility.yul\":1812:1816   */\n      0x11\n        /* \"#utility.yul\":1809:1810   */\n      0x04\n        /* \"#utility.yul\":1802:1817   */\n      mstore\n        /* \"#utility.yul\":1836:1840   */\n      0x24\n        /* \"#utility.yul\":1833:1834   */\n      0x00\n        /* \"#utility.yul\":1826:1841   */\n      revert\n        /* \"#utility.yul\":1853:2158   */\n    tag_37:\n        /* \"#utility.yul\":1893:1896   */\n      0x00\n        /* \"#utility.yul\":1912:1932   */\n      tag_71\n        /* \"#utility.yul\":1930:1931   */\n      dup3\n        /* \"#utility.yul\":1912:1932   */\n      tag_38\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1907:1932   */\n      swap2\n      pop\n        /* \"#utility.yul\":1946:1966   */\n      tag_72\n        /* \"#utility.yul\":1964:1965   */\n      dup4\n        /* \"#utility.yul\":1946:1966   */\n      tag_38\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1941:1966   */\n      swap3\n      pop\n        /* \"#utility.yul\":2100:2101   */\n      dup3\n        /* \"#utility.yul\":2032:2098   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2028:2102   */\n      sub\n        /* \"#utility.yul\":2025:2026   */\n      dup3\n        /* \"#utility.yul\":2022:2103   */\n      gt\n        /* \"#utility.yul\":2019:2126   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":2106:2124   */\n      tag_74\n      tag_47\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2019:2126   */\n    tag_73:\n        /* \"#utility.yul\":2150:2151   */\n      dup3\n        /* \"#utility.yul\":2147:2148   */\n      dup3\n        /* \"#utility.yul\":2143:2152   */\n      add\n        /* \"#utility.yul\":2136:2152   */\n      swap1\n      pop\n        /* \"#utility.yul\":1853:2158   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220768cc4eec61441a9f47880dfd03cff6a5f0de1e952cd8196d83ec8aeb50398bb64736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061033d806100206000396000f3fe60806040526004361061004a5760003560e01c80636f9fb98a1461004f578063957177ba1461007a578063c899e41714610091578063d0e30db0146100ba578063ea14661b146100c4575b600080fd5b34801561005b57600080fd5b506100646100ef565b60405161007191906101d7565b60405180910390f35b34801561008657600080fd5b5061008f6100f7565b005b34801561009d57600080fd5b506100b860048036038101906100b39190610255565b61014d565b005b6100c261019e565b005b3480156100d057600080fd5b506100d96101b8565b6040516100e691906101d7565b60405180910390f35b600047905090565b60003390508073ffffffffffffffffffffffffffffffffffffffff166108fc61011e6100ef565b9081150290604051600060405180830381858888f19350505050158015610149573d6000803e3d6000fd5b5050565b8073ffffffffffffffffffffffffffffffffffffffff166108fc61016f6100ef565b9081150290604051600060405180830381858888f1935050505015801561019a573d6000803e3d6000fd5b5050565b346000808282546101af91906102b1565b92505081905550565b60005481565b6000819050919050565b6101d1816101be565b82525050565b60006020820190506101ec60008301846101c8565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610222826101f7565b9050919050565b61023281610217565b811461023d57600080fd5b50565b60008135905061024f81610229565b92915050565b60006020828403121561026b5761026a6101f2565b5b600061027984828501610240565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102bc826101be565b91506102c7836101be565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102fc576102fb610282565b5b82820190509291505056fea2646970667358221220768cc4eec61441a9f47880dfd03cff6a5f0de1e952cd8196d83ec8aeb50398bb64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x957177BA EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xC899E417 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xEA14661B EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0xEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F PUSH2 0xF7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC2 PUSH2 0x19E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x11E PUSH2 0xEF JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x149 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x16F PUSH2 0xEF JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x19A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x2B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D1 DUP2 PUSH2 0x1BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222 DUP3 PUSH2 0x1F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x232 DUP2 PUSH2 0x217 JUMP JUMPDEST DUP2 EQ PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24F DUP2 PUSH2 0x229 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26B JUMPI PUSH2 0x26A PUSH2 0x1F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x279 DUP5 DUP3 DUP6 ADD PUSH2 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BC DUP3 PUSH2 0x1BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7 DUP4 PUSH2 0x1BE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2FC JUMPI PUSH2 0x2FB PUSH2 0x282 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x8CC4EEC61441A9F47880DFD03CFF6A5F0DE1E952CD8196 0xD8 RETURNDATACOPY 0xC8 0xAE 0xB5 SUB SWAP9 0xBB PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "66:2584:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deposit_14": {
									"entryPoint": 414,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getContractBalance_61": {
									"entryPoint": 239,
									"id": 61,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalBalanceRecieved_4": {
									"entryPoint": 440,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawAllToSenderAddress_34": {
									"entryPoint": 247,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withrawToAddress_48": {
									"entryPoint": 333,
									"id": 48,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2161:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"src": "442:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "814:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "824:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "846:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "796:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "806:7:1",
														"type": ""
													}
												],
												"src": "769:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "954:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "964:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "993:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "975:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "975:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "964:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "936:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "946:7:1",
														"type": ""
													}
												],
												"src": "901:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1062:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1127:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1136:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1139:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1129:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1129:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1129:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1085:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1118:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1092:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1092:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1082:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1082:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1075:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1075:51:1"
															},
															"nodeType": "YulIf",
															"src": "1072:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1055:5:1",
														"type": ""
													}
												],
												"src": "1011:138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1215:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1225:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1247:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1234:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1225:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1298:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "1263:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1263:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1263:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1193:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1201:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1209:5:1",
														"type": ""
													}
												],
												"src": "1155:155:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1390:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1436:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1438:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1438:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1438:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1411:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1420:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1407:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1407:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1432:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1403:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:32:1"
															},
															"nodeType": "YulIf",
															"src": "1400:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1529:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1544:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1558:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1548:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1573:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1616:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1627:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1612:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1612:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1636:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1583:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1583:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1573:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1360:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1371:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1383:6:1",
														"type": ""
													}
												],
												"src": "1316:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1712:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1715:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1705:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1705:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1809:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1812:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1802:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1802:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1833:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1836:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1826:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1667:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1897:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1907:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1930:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1912:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1907:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1941:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1964:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1946:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1946:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1941:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2104:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2106:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2106:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2106:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2025:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2032:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2100:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2022:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2022:81:1"
															},
															"nodeType": "YulIf",
															"src": "2019:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2136:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2147:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2150:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2143:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2143:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2136:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1884:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1887:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1893:3:1",
														"type": ""
													}
												],
												"src": "1853:305:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80636f9fb98a1461004f578063957177ba1461007a578063c899e41714610091578063d0e30db0146100ba578063ea14661b146100c4575b600080fd5b34801561005b57600080fd5b506100646100ef565b60405161007191906101d7565b60405180910390f35b34801561008657600080fd5b5061008f6100f7565b005b34801561009d57600080fd5b506100b860048036038101906100b39190610255565b61014d565b005b6100c261019e565b005b3480156100d057600080fd5b506100d96101b8565b6040516100e691906101d7565b60405180910390f35b600047905090565b60003390508073ffffffffffffffffffffffffffffffffffffffff166108fc61011e6100ef565b9081150290604051600060405180830381858888f19350505050158015610149573d6000803e3d6000fd5b5050565b8073ffffffffffffffffffffffffffffffffffffffff166108fc61016f6100ef565b9081150290604051600060405180830381858888f1935050505015801561019a573d6000803e3d6000fd5b5050565b346000808282546101af91906102b1565b92505081905550565b60005481565b6000819050919050565b6101d1816101be565b82525050565b60006020820190506101ec60008301846101c8565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610222826101f7565b9050919050565b61023281610217565b811461023d57600080fd5b50565b60008135905061024f81610229565b92915050565b60006020828403121561026b5761026a6101f2565b5b600061027984828501610240565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102bc826101be565b91506102c7836101be565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102fc576102fb610282565b5b82820190509291505056fea2646970667358221220768cc4eec61441a9f47880dfd03cff6a5f0de1e952cd8196d83ec8aeb50398bb64736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x957177BA EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xC899E417 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xEA14661B EQ PUSH2 0xC4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0xEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F PUSH2 0xF7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x255 JUMP JUMPDEST PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC2 PUSH2 0x19E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x1D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x11E PUSH2 0xEF JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x149 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x16F PUSH2 0xEF JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x19A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x2B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D1 DUP2 PUSH2 0x1BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222 DUP3 PUSH2 0x1F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x232 DUP2 PUSH2 0x217 JUMP JUMPDEST DUP2 EQ PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24F DUP2 PUSH2 0x229 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26B JUMPI PUSH2 0x26A PUSH2 0x1F2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x279 DUP5 DUP3 DUP6 ADD PUSH2 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BC DUP3 PUSH2 0x1BE JUMP JUMPDEST SWAP2 POP PUSH2 0x2C7 DUP4 PUSH2 0x1BE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2FC JUMPI PUSH2 0x2FB PUSH2 0x282 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x8CC4EEC61441A9F47880DFD03CFF6A5F0DE1E952CD8196 0xD8 RETURNDATACOPY 0xC8 0xAE 0xB5 SUB SWAP9 0xBB PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "66:2584:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2543:105;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1459:145;;;;;;;;;;;;;:::i;:::-;;2033:103;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;819:84;;;:::i;:::-;;329:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:105;2594:7;2620:21;2613:28;;2543:105;:::o;1459:145::-;1514:18;1543:10;1514:40;;1564:2;:11;;:33;1576:20;:18;:20::i;:::-;1564:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1504:100;1459:145::o;2033:103::-;2096:2;:11;;:33;2108:20;:18;:20::i;:::-;2096:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2033:103;:::o;819:84::-;887:9;863:20;;:33;;;;;;;:::i;:::-;;;;;;;;819:84::o;329:35::-;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:104::-;946:7;975:24;993:5;975:24;:::i;:::-;964:35;;901:104;;;:::o;1011:138::-;1092:32;1118:5;1092:32;:::i;:::-;1085:5;1082:43;1072:71;;1139:1;1136;1129:12;1072:71;1011:138;:::o;1155:155::-;1209:5;1247:6;1234:20;1225:29;;1263:41;1298:5;1263:41;:::i;:::-;1155:155;;;;:::o;1316:345::-;1383:6;1432:2;1420:9;1411:7;1407:23;1403:32;1400:119;;;1438:79;;:::i;:::-;1400:119;1558:1;1583:61;1636:7;1627:6;1616:9;1612:22;1583:61;:::i;:::-;1573:71;;1529:125;1316:345;;;;:::o;1667:180::-;1715:77;1712:1;1705:88;1812:4;1809:1;1802:15;1836:4;1833:1;1826:15;1853:305;1893:3;1912:20;1930:1;1912:20;:::i;:::-;1907:25;;1946:20;1964:1;1946:20;:::i;:::-;1941:25;;2100:1;2032:66;2028:74;2025:1;2022:81;2019:107;;;2106:18;;:::i;:::-;2019:107;2150:1;2147;2143:9;2136:16;;1853:305;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "165800",
								"executionCost": "208",
								"totalCost": "166008"
							},
							"external": {
								"deposit()": "infinite",
								"getContractBalance()": "317",
								"totalBalanceRecieved()": "2495",
								"withdrawAllToSenderAddress()": "infinite",
								"withrawToAddress(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 2650,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 2650,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220768cc4eec61441a9f47880dfd03cff6a5f0de1e952cd8196d83ec8aeb50398bb64736f6c634300080e0033",
									".code": [
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "6F9FB98A"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "957177BA"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "C899E417"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "EA14661B"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66,
											"end": 2650,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1459,
											"end": 1604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2033,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2033,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 903,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 819,
											"end": 903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 819,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 819,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 819,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 903,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 819,
											"end": 903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 819,
											"end": 903,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 329,
											"end": 364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 329,
											"end": 364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 329,
											"end": 364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 329,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 329,
											"end": 364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 329,
											"end": 364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 329,
											"end": 364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 329,
											"end": 364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 329,
											"end": 364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2641,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1459,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1553,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1564,
											"end": 1575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1576,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1576,
											"end": 1594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1576,
											"end": 1596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1596,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1576,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1459,
											"end": 1604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2096,
											"end": 2107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 2108,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2108,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2108,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2128,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2108,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 903,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 819,
											"end": 903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 887,
											"end": 896,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 863,
											"end": 883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 863,
											"end": 896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 863,
											"end": 896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 863,
											"end": 896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 863,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 863,
											"end": 896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 863,
											"end": 896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 863,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 863,
											"end": 896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 863,
											"end": 896,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 863,
											"end": 896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 863,
											"end": 896,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 863,
											"end": 896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 863,
											"end": 896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 863,
											"end": 896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 863,
											"end": 896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 863,
											"end": 896,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 863,
											"end": 896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 329,
											"end": 364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1005,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 901,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 946,
											"end": 953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 975,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 975,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 975,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 975,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 964,
											"end": 999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1149,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1011,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1118,
											"end": 1123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1092,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1125,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1072,
											"end": 1143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1141,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1072,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1310,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1155,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1253,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1254,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1298,
											"end": 1303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1263,
											"end": 1304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1263,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1661,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1316,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1432,
											"end": 1434,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1418,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1430,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1435,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1438,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1636,
											"end": 1643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1625,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1583,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1583,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1661,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1661,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1847,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1667,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1705,
											"end": 1793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1809,
											"end": 1810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1802,
											"end": 1817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1840,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1833,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1841,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2158,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1853,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 1896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1930,
											"end": 1931,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1912,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1912,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1964,
											"end": 1965,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1946,
											"end": 1966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1966,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1946,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2098,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2028,
											"end": 2102,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2103,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2126,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2019,
											"end": 2126,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2106,
											"end": 2124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2126,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2019,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2158,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 2158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/SimpleSmartMoney.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"getContractBalance()": "6f9fb98a",
							"totalBalanceRecieved()": "ea14661b",
							"withdrawAllToSenderAddress()": "957177ba",
							"withrawToAddress(address)": "c899e417"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBalanceRecieved\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllToSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withrawToAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"- Function `deposit()`:  - This function allows any user to deposit Ether into the smart contract.  - It is marked as payable, which means it can receive Ether along with  - other data in its transaction.  - The value of the incoming Ether is added to the `totalBalanceRecieved` variable. -  When called, this function will increment the sender's balance by the amount -  they are sending (msg.value).*\"},\"getContractBalance()\":{\"notice\":\"- Function `getContractBalance()`:  - This view function simply returns the current balance of the contract in wei. - It does so by using the built-in `address(this).balance` property which always - refers to the current contract's balance. The returned value is of type uint256, - representing the amount of Ether in the contract, in smallest denomination (wei).*\"},\"totalBalanceRecieved()\":{\"notice\":\"- The `totalBalanceRecieved` is a public state variable of type uint256,  - representing the total amount in wei (the smallest unit of ether) that  - has been deposited into this contract by users.*\"},\"withdrawAllToSenderAddress()\":{\"notice\":\"-  Function `withdrawAllToSenderAddress()`:  - This function allows a user to withdraw all of their Ether from the contract  - back into their own account. The total amount available for withdrawal -  is determined by calling the `getContractBalance()` function (which returns  - the balance of this smart contract). The `transfer` method is used here, which  - sends the specified amount of wei to a given address and automatically handles -  gas fees. In this case, it's sent back to the sender.*\"},\"withrawToAddress(address)\":{\"notice\":\"- Function `withrawToAdress(address payable  to)`:  - This function allows an owner (not shown here because there are no roles defined for - these functions) to withdraw all of the Ether from the contract into a specified  - address. The recipient's address must be provided when calling this function and - it is marked as `payable`, allowing ether to be sent directly to that address.*\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleSmartMoney.sol\":\"SimpleSmartMoneySmart\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SimpleSmartMoney.sol\":{\"keccak256\":\"0x30914dffbceb9a645ff72494b63b2fb45c10584fe254dce6bc92028ca39660b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cc711cbb4090792686f9e781deaab34ca8ce53c88a7ab193f9f6767117be78c\",\"dweb:/ipfs/QmVXh19wE5fqKFHUp2byxdtRvrq7jRC75JBS2yHJaVpnuT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/SimpleSmartMoney.sol:SimpleSmartMoneySmart",
								"label": "totalBalanceRecieved",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deposit()": {
								"notice": "- Function `deposit()`:  - This function allows any user to deposit Ether into the smart contract.  - It is marked as payable, which means it can receive Ether along with  - other data in its transaction.  - The value of the incoming Ether is added to the `totalBalanceRecieved` variable. -  When called, this function will increment the sender's balance by the amount -  they are sending (msg.value).*"
							},
							"getContractBalance()": {
								"notice": "- Function `getContractBalance()`:  - This view function simply returns the current balance of the contract in wei. - It does so by using the built-in `address(this).balance` property which always - refers to the current contract's balance. The returned value is of type uint256, - representing the amount of Ether in the contract, in smallest denomination (wei).*"
							},
							"totalBalanceRecieved()": {
								"notice": "- The `totalBalanceRecieved` is a public state variable of type uint256,  - representing the total amount in wei (the smallest unit of ether) that  - has been deposited into this contract by users.*"
							},
							"withdrawAllToSenderAddress()": {
								"notice": "-  Function `withdrawAllToSenderAddress()`:  - This function allows a user to withdraw all of their Ether from the contract  - back into their own account. The total amount available for withdrawal -  is determined by calling the `getContractBalance()` function (which returns  - the balance of this smart contract). The `transfer` method is used here, which  - sends the specified amount of wei to a given address and automatically handles -  gas fees. In this case, it's sent back to the sender.*"
							},
							"withrawToAddress(address)": {
								"notice": "- Function `withrawToAdress(address payable  to)`:  - This function allows an owner (not shown here because there are no roles defined for - these functions) to withdraw all of the Ether from the contract into a specified  - address. The recipient's address must be provided when calling this function and - it is marked as `payable`, allowing ether to be sent directly to that address.*"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/SimpleSmartMoney.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleSmartMoney.sol",
					"exportedSymbols": {
						"SimpleSmartMoneySmart": [
							62
						]
					},
					"id": 63,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SimpleSmartMoneySmart",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 62,
							"linearizedBaseContracts": [
								62
							],
							"name": "SimpleSmartMoneySmart",
							"nameLocation": "75:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "103:221:0",
										"text": "- The `totalBalanceRecieved` is a public state variable of type uint256, \n- representing the total amount in wei (the smallest unit of ether) that \n- has been deposited into this contract by users.*"
									},
									"functionSelector": "ea14661b",
									"id": 4,
									"mutability": "mutable",
									"name": "totalBalanceRecieved",
									"nameLocation": "344:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 62,
									"src": "329:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "329:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "853:50:0",
										"statements": [
											{
												"expression": {
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "totalBalanceRecieved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "863:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 9,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "887:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "887:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "863:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "863:33:0"
											}
										]
									},
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "371:442:0",
										"text": "- Function `deposit()`: \n- This function allows any user to deposit Ether into the smart contract. \n- It is marked as payable, which means it can receive Ether along with \n- other data in its transaction. \n- The value of the incoming Ether is added to the `totalBalanceRecieved` variable.\n-  When called, this function will increment the sender's balance by the amount\n-  they are sending (msg.value).*"
									},
									"functionSelector": "d0e30db0",
									"id": 14,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "828:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "835:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:0:0"
									},
									"scope": 62,
									"src": "819:84:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "1504:100:0",
										"statements": [
											{
												"assignments": [
													19
												],
												"declarations": [
													{
														"constant": false,
														"id": 19,
														"mutability": "mutable",
														"name": "to",
														"nameLocation": "1530:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 33,
														"src": "1514:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 18,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1514:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 25,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 22,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1543:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1543:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1535:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 20,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1535:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1535:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1514:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 29,
																"name": "getContractBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1576:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1576:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 26,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "1564:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1564:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1564:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "1564:33:0"
											}
										]
									},
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "909:545:0",
										"text": "-  Function `withdrawAllToSenderAddress()`: \n- This function allows a user to withdraw all of their Ether from the contract \n- back into their own account. The total amount available for withdrawal\n-  is determined by calling the `getContractBalance()` function (which returns \n- the balance of this smart contract). The `transfer` method is used here, which \n- sends the specified amount of wei to a given address and automatically handles\n-  gas fees. In this case, it's sent back to the sender.*"
									},
									"functionSelector": "957177ba",
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAllToSenderAddress",
									"nameLocation": "1468:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1494:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1504:0:0"
									},
									"scope": 62,
									"src": "1459:145:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "2086:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 43,
																"name": "getContractBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "2108:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2108:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 40,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2096:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2096:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2096:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "2096:33:0"
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1610:418:0",
										"text": "- Function `withrawToAdress(address payable  to)`: \n- This function allows an owner (not shown here because there are no roles defined for\n- these functions) to withdraw all of the Ether from the contract into a specified \n- address. The recipient's address must be provided when calling this function and\n- it is marked as `payable`, allowing ether to be sent directly to that address.*"
									},
									"functionSelector": "c899e417",
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withrawToAddress",
									"nameLocation": "2042:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2075:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "2059:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2059:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2058:20:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:0"
									},
									"scope": 62,
									"src": "2033:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "2603:45:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 56,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2628:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SimpleSmartMoneySmart_$62",
																	"typeString": "contract SimpleSmartMoneySmart"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_SimpleSmartMoneySmart_$62",
																	"typeString": "contract SimpleSmartMoneySmart"
																}
															],
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2620:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 54,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2620:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2620:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2620:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 53,
												"id": 59,
												"nodeType": "Return",
												"src": "2613:28:0"
											}
										]
									},
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "2142:396:0",
										"text": "- Function `getContractBalance()`: \n- This view function simply returns the current balance of the contract in wei.\n- It does so by using the built-in `address(this).balance` property which always\n- refers to the current contract's balance. The returned value is of type uint256,\n- representing the amount of Ether in the contract, in smallest denomination (wei).*"
									},
									"functionSelector": "6f9fb98a",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractBalance",
									"nameLocation": "2552:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2570:2:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2594:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2593:9:0"
									},
									"scope": 62,
									"src": "2543:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 63,
							"src": "66:2584:0",
							"usedErrors": []
						}
					],
					"src": "32:2619:0"
				},
				"id": 0
			}
		}
	}
}